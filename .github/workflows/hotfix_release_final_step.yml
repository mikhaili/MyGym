name: Android SDK Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
      slack_channel:
        description: 'Slack Channel'
        required: true

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Config Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Merge release to master
        env:
          BRANCH_NAME: release/${{ github.event.inputs.version }}
          RELEASE_NOTES: ${{ env.RELEASE_NOTES }}
          SDK_VERSION: ${{ env.SDK_VERSION }}
        run: |
          git checkout master
          git merge --no-ff $BRANCH_NAME
          if [ $? -ne 0 ]; then
            echo "Merge conflicts detected! Please resolve them and try again."
            exit 1
          fi
          git push origin master
      - name: Merge master to develop
        if: startsWith(github.ref, 'refs/heads/develop')
        run: |
        # Create a new branch from master
          git checkout -b master_after_merge_$SDK_VERSION master
    
        # Switch to develop branch and merge the new branch
          git checkout develop
          git merge --no-ff master_after_merge_$SDK_VERSION
          
        # Check if merge was successful
          if [ $? -ne 0 ]; then
            echo "Merge conflicts detected! Please resolve them and try again."
            exit 1
          fi
          
        # Push changes to remote develop branch and delete the temporary branch
          git push origin develop
          git branch -D master_after_merge_$SDK_VERSION

  notify:
    needs: merge
    runs-on: ubuntu-latest
    steps:
      - name: Notify on Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: message
          custom_payload: |
            {
              "text": "Workflow dispatched",
              "channel": "${{ github.event.inputs.slack_channel }}",
              "attachments": [{
                "text": "Version: $SDK_VERSION was released"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send mail
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: Version released
          to: user@example.com
          body: Version ${{ github.event.inputs.version }} was released.
